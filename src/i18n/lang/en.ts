const en = {
  common: {
    search: 'Search',
    success: 'Successful',
    edit: "Edit",
    preservation: "Submit",
    Submit: "Submit",
    cancel: "Cancel",
    delete: "Delete",
    actions: 'Actions',
    num: 'No.',
    next: "Next",
    add: "Add",
    data: "Data",
    previous: "Previous",
    saveAndReturn: "Save And Return",
    cpu: "CPU",
    memory: "Memory",
    bandwidth: "Bandwidth",
    cores: "Cores",
    minute: 'minute',
    hours: 'hours',
    second: 'second',
    copy: "Copy",
    payment: "Pay",
    continuePayment: "Continue Pay",
    viewResults: "View results",
    startUp: "StartUp",
    address: "Address",
    day: "D",
    month: "M",
    year: "Y",
    all: "all",
    computations: 'computations',
    partyInfo: 'Participant Information',
    taskRole: 'Task role',
    identityId: 'IdentityID',
    info: 'Info',
    name: 'Name',
    view: "View"
  },
  menu: {
    home: 'Home',
    nodes: 'Nodes',
    nodesDetail: 'Nodes Details',
    marketplace: 'Marketplace',
    marketplaceDetails: 'Marketplace Details',
    computing: 'Computing Services',
    computeTaskDetails: 'Computing Task Details',
    createTask: "Create Task",
    data: "My Data",
    dataDetails: "Data Details",
    dataCredentials: "Data Credentials",
    workflow: "My Workflow",
    workflowDetails: "Workflow Details",
    taskDetails: "Tasks Details",
    models: "My Models",
    computeTask: "Computing Tasks"
  },
  head: {
    myAccountTitle: 'My Account',
    connect: 'Connect Moirae',
    login: 'Log In RosettaFlow',
    logout: 'Log Out',
    myAccount: 'My Account',
    editNickname: 'Modify Nickname',
    Nickname: "Nickname",
    nodeManagement: 'Node Management',
    loginDialogTitle: "Metamask Extension",
    install: "install",
    installTipOne: 'One-click blockchain application',
    installTipTwo: 'Privacy Preserved Locally',
  },
  home: {
    dataOverview: 'Data Overview',
    privacyComputations: 'Privacy Computations',
    participatingAddresses: 'Participating Addresses',
    activeAddresses: '24h Active Addresses',
    aIModels: 'AI Models',
    modelCredentials: 'Model Credentials',
    modelCredUse: 'Model Cred. Use',
    dataAmount: 'Data Amount',
    dataCredentials: 'Data Credentials',
    dataCredUse: 'Data Cred. Use',
    globalPowerAndRank: 'Computing Power Overview & Ranking',
    totalCpu: 'Total CPU',
    totalMemory: 'Total Memory',
    totalBandwidth: 'Total Bandwidth',
    nodeName: 'Node name',
    powerRatio: 'Power Ratio',
    ranking: 'Ranking',
    viewAllNode: 'View All Nodes',
    dataUseTop10: 'Data Credential Use TOP10',
    modelUseTop10: 'Model Credential Use TOP10',
    explorer: 'Explorer',
    viewAllComputingTask: 'View all computing tasks'
  },
  account: {
    walletAddress: 'Wallet Address',
    viewExplorer: 'View Explorer',
    copyStatusSuccess: 'Copy Succeeded',
    copyStatusFailed: 'Copy Failed',
    nickPlaceholder: 'Please enter a nickname',
    nickValidateTips: 'The length is between 3 and 20 characters',
    tips: "Tips",
    tipsText: "Delete node"
  },
  node: {
    nodeName: 'Node name',
    nodePort: 'Node Port',
    nodeIP: 'Node IP',
    addNode: "Add Node",
    view: 'View',
    credentials: 'Credentials',
    computations: 'Computations',
    totalCpu: 'Total CPU',
    totalMemory: 'Total Memory',
    totalBandwidth: 'Total Bandwidth',
    capabilityInTask: 'Capability',
    startTime: 'Start Time'
  },
  task: {
    createTaskBriefInfo: "Create new task you need",
    expertMode: "Expert Mode",
    step: "Step",
    stepOneInfo: "Select algorithm",
    stepTwoInfo: "Select training data  ",
    stepThreeInfo: "Select prediction data",
    stepFourInfo: "Select environment",
    stepFiveInfo: "Select result receivers",
    modeIntroductionTips: "Expert mode is suitable for developers who are familiar with AI algorithms, and supports a series of complex operations such as hyperparameter modification of AI algorithms.",
    taskName: "Task Name",
    pleaseEnter: "Please Enter",
    taskNameRules: "Naming rules",
    taskNameRulesOne: "cannot be modified after submitting",
    taskNameRulesTwo: "no limit to character type",
    taskNameRulesThree: " 8 characters at least",
    taskNameRulesFour: "64 characters at most",
    stepOneSelectComputingTitle: "Select the category of the privacy computing",
    Statistics: "Statistics",
    AiComputing: "AI computing",
    stepOneSelectAlgorithmTitle: "Select the algorithm",
    stepOneSelectAIAlgorithmTitle: "Select the AI algorithm",
    stepOneSelectProcedureTitle: "Select the task procedure",
    procedureTrain: "Train",
    procedurePredict: "Predict",
    procedureAll: "Train and then predict",
    selection: "Selection",
    selectSponsor: "Select the sponsor",
    importFields: "Import fields",
    field: "Field",
    fieldTips: "Select and assign the fields used in your task",
    selectField: "Select",
    setTo: "Set to",
    idColumn: "ID column",
    label: "Label",
    feature: "Feature",
    selectData: "Data",
    select: "Select",
    selectModel: "Select the model",
    environmentTraining: "Select the environment of the training task",
    environmentPrediction: "Select the environment of the prediction task",
    lowestNeed: "Lowest computing power need",
    longestTime: "Longest computing time",
    trainingResultReceivers: "Select result receivers of the training task",
    predictionResultReceivers: "Select result receivers of the prediction task",
    startTask: "Start Task"
  },
  myData: {
    tasksBriefInfoFirstParagraph: " ",
    tasksBriefInfoTwoParagraph: "effective data",
    dataName: "Data Name",
    dataProvider: "Data Provider",
    credentialName: "Credential Name",
    price: "Price",
    Trading: "15Day TradingVolume(LAT)",
    purchase: "Purchase",
    viewData: "View Data",
    viewCredential: "View Credential",
    basicInfo: "basic Information",
    metadata: "Metadata",
    tasksInvolved: "Tasks Involved",
    credentialSymbol: "Credential symbol",
    launchTime: "Launch time",
    industryData: "Industry of data",
    dataFormat: "Data format",
    dataSize: "Data size",
    rowsData: "Rows of data",
    columnsData: "Columns of data",
    dataDescription: "Data description",
    field: "Field",
    dataType: "Data Type",
    remarks: "Remarks",
    taskID: "Task ID",
    TaskCategory: "Task Category",
    capability: "Capability",
    createTime: "Create Time",
    totalTime: "Total Time",
  },
  workflow: {
    workflowName: "Workflow Name",
    workflowAlgorithm: "Workflow Algorithm",
    workflowSteps: "Workflow Steps",
    latestRunningTime: "Latest Running Time",
    creationTime: "Creation Time",
    viewRecords: "View Records",
    continueEditing: "Continue Edit",
    deleteWorkflow: "Delete",
    totalOf: " ",
    workTipsBriefInfoTwoParagraph: "privacy computing workflows",
    recordWorkflow: "Record of this workflow"
  },
  credentials: {
    circulation: "Circulation",
    numberHolders: "Number of Holders",
    viewExplorer: "View on the blockchain explorer",
    presentPrice: "Present price",
    priceTrend: "Price Trend",
    volumeTrend: "Volume Trend",
    credentialExchangePool: "Credential Exchange Pool",
    total: 'Total',
    myShare: "My share"
  },
  computing: {
    privacyStatistics: "Privacy Statistics",
    privacyAIComputing: "Privacy AI Computing",
    privacyComputing: "Privacy Computing",
    nonPrivacyComputing: "Non-Privacy Computing"
  },
  computeTask: {
    taskId: "Task ID",
    taskCategory: "Task Category",
    startTime: "Start Time",
    totalTime: "Total Time",
    tasksBriefInfoTwoParagraph: "records of the privacy computing tasks",
    taskEvents: "Task Events",
    taskStartTime: "Task start time",
    computingStartTime: "Computing start time",
    taskEndTime: "Task end time",
    taskTesult: "Task result",
    declaredComputingPowerRequired: "Declared computing power required",
    capacity: "Capacity",
    name: "Name",
    identifier: "Identifier",
    information: "Information",
    eventType: "Event type",
    eventMaker: "Event maker",
    generationTime: "Generation time",
    eventContent: "Event conten"
  }
}

export default en
